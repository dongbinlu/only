server.port=8060
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/security?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.redis.pool.max-active=8
spring.redis.host=192.168.50.163
spring.redis.password=
spring.redis.port=6379
spring.redis.timeout=6000
#session存储  源码StoreType
spring.session.store-type=none
#关掉SpringSecurity 如果classpath下有springsecurity相关的jar包 ， springboot就会自动扫描，进行自动保护
#security.basic.enabled = false
#session超时时间 单位s 默认30分钟   TomcatEmbeddedServletContainerFactory这个类来处理  但时间小于1分钟的话，默认当1分钟处理
server.session.timeout=600
#别名扫描包
mybatis.type-aliases-package=com.safecode.security.subject.entity
#驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true
#配置mybatis xml配置文件
mybatis.mapper-locations=classpath:mappers/*.xml
#pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#日志配置
#com.safecode.security.subject包下所有class以DEBUG级别输出
#logging.level.com.safecode.security.subject=debug 
#logging.level.org.springframework.web=debug
#logging.level.org.springframework.transaction=debug
#logging.level.org.mybatis=debug
logging.file=logs/security-subject.log
#设置打印mybatis SQL语句
logging.level.com.safecode.security.subject.mapper=debug
#security-subject自己配登录页
#safecode.security.browser.loginPage = /subject-signIn.html
#用户自己配置登录成功后到底时重定REDIRECT向还是返回JSON
safecode.security.browser.loginType=JSON
#用户自己配置退出成功后的页面
#safecode.security.browser.signOutUrl = /subject-signOut.html
#记住我过期时间 ， 默认为1周
safecode.security.browser.remember-me-seconds=604800
#用户自己配置图片验证码的属性
safecode.security.code.image.width=67
safecode.security.code.image.height=23
safecode.security.code.image.length=4
safecode.security.code.image.expireIn=180
#这两个url需要图形验证码的判断
safecode.security.code.image.url=/auth
#短信验证码配置
safecode.security.code.sms.length=4
safecode.security.code.sms.expireIn=180
safecode.security.code.sms.url=/me
safecode.security.social.qq.app-id=101577640
safecode.security.social.qq.app-secret=5acae81a297fb9788669d9e5855adb81
#社交账号和业务系统注册
safecode.security.browser.signUpUrl=/subject-signUp.html
safecode.security.social.qq.providerId=callback.do
safecode.security.social.filterProcessesUrl=/qqLogin
safecode.security.social.weixin.app-id=wxd99431bbff8305a0
safecode.security.social.weixin.app-secret=60f78681d063590a469f1b297feff3c4
#security.oauth2.client.clientId = subject
#security.oauth2.client.clientSecret = subjectSecret
safecode.security.oauth2.clients[0].clientId=subject
safecode.security.oauth2.clients[0].clientSecret=subjectsecret
safecode.security.oauth2.clients[0].accessTokenValidateSeconds=3600
safecode.security.oauth2.clients[1].clientId=test
safecode.security.oauth2.clients[1].clientSecret=test
#safecode.security.oauth2.tokenStore = redis
safecode.security.oauth2.tokenStore=jwt
